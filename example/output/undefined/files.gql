query files($validationStatus: MetafieldValidationStatus, $namespace: String, $first: Int, $after: String, $last: Int, $before: String, $reverse: Boolean, $namespace1: String!, $key: String!, $namespace2: String, $first1: Int, $after1: String, $last1: Int, $before1: String, $reverse1: Boolean, $namespace3: String!, $key1: String!, $validationStatus1: MetafieldValidationStatus, $first2: Int, $after2: String, $last2: Int, $before2: String, $reverse2: Boolean, $validationStatus2: MetafieldValidationStatus, $namespace4: String!, $key2: String!, $namespace5: String!, $key3: String!, $transform: ImageTransformInput, $first3: Int, $after3: String, $last3: Int, $before3: String, $reverse3: Boolean, $sortKey: FileSortKeys, $query: String, $savedSearchId: ID){
    files(first: $first3, after: $after3, last: $last3, before: $before3, reverse: $reverse3, sortKey: $sortKey, query: $query, savedSearchId: $savedSearchId){
        edges{
            cursor
            node{
                alt
                createdAt
                fileErrors{
                    code
                    details
                    message
                }
                fileStatus
                preview{
                    image{
                        altText
                        height
                        id
                        metafield(namespace: $namespace4, key: $key2){
                            createdAt
                            definition{
                                description
                                id
                                key
                                metafields(validationStatus: $validationStatus1, first: $first2, after: $after2, last: $last2, before: $before2, reverse: $reverse2){
                                    edges{
                                        cursor
                                    }
                                    nodes{
                                        createdAt
                                        definition{
                                            description
                                            id
                                            key
                                            metafieldsCount(validationStatus: $validationStatus)
                                            name
                                            namespace
                                            ownerType
                                            pinnedPosition
                                            standardTemplate{
                                                description
                                                id
                                                key
                                                name
                                                namespace
                                                ownerTypes
                                                type{
                                                    category
                                                    name
                                                    supportedValidations{
                                                        name
                                                        type
                                                    }
                                                    supportsDefinitionMigrations
                                                }
                                                validations{
                                                    name
                                                    type
                                                    value
                                                }
                                                visibleToStorefrontApi
                                            }
                                            type{
                                                category
                                                name
                                                supportsDefinitionMigrations
                                            }
                                            validationStatus
                                            validations{
                                                name
                                                type
                                                value
                                            }
                                            visibleToStorefrontApi
                                        }
                                        description
                                        id
                                        key
                                        legacyResourceId
                                        namespace
                                        owner{
                                            metafield(namespace: $namespace3, key: $key1){
                                                createdAt
                                                description
                                                id
                                                key
                                                legacyResourceId
                                                namespace
                                                owner{
                                                    metafields(namespace: $namespace, first: $first, after: $after, last: $last, before: $before, reverse: $reverse){
                                                        pageInfo{
                                                            endCursor
                                                            hasNextPage
                                                            hasPreviousPage
                                                            startCursor
                                                        }
                                                    }
                                                    privateMetafield(namespace: $namespace1, key: $key){
                                                        createdAt
                                                        id
                                                        key
                                                        namespace
                                                        updatedAt
                                                        value
                                                        valueType
                                                    }
                                                    privateMetafields(namespace: $namespace2, first: $first1, after: $after1, last: $last1, before: $before1, reverse: $reverse1){
                                                        edges{
                                                            cursor
                                                        }
                                                        nodes{
                                                            createdAt
                                                            id
                                                            key
                                                            namespace
                                                            updatedAt
                                                            value
                                                            valueType
                                                        }
                                                        pageInfo{
                                                            endCursor
                                                            hasNextPage
                                                            hasPreviousPage
                                                            startCursor
                                                        }
                                                    }
                                                }
                                                ownerType
                                                reference
                                                type
                                                updatedAt
                                                value
                                            }
                                        }
                                        ownerType
                                        reference
                                        type
                                        updatedAt
                                        value
                                    }
                                }
                                metafieldsCount(validationStatus: $validationStatus2)
                                name
                                namespace
                                ownerType
                                pinnedPosition
                                validationStatus
                                visibleToStorefrontApi
                            }
                            description
                            id
                            key
                            legacyResourceId
                            namespace
                            ownerType
                            reference
                            type
                            updatedAt
                            value
                        }
                        privateMetafield(namespace: $namespace5, key: $key3){
                            createdAt
                            id
                            key
                            namespace
                            updatedAt
                            value
                            valueType
                        }
                        url(transform: $transform)
                        width
                    }
                    status
                }
            }
        }
        nodes{
            alt
            createdAt
            fileErrors{
                code
                details
                message
            }
            fileStatus
            preview{
                status
            }
        }
        pageInfo{
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
        }
    }
}